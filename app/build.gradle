repositories {
    maven { url "https://jitpack.io" }
    flatDir {
        dirs 'libs'
    }
}

apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'
    defaultConfig {
        applicationId "com.yoshione.fingen_x"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 132
        versionName "2.6.4.2"
        resValue "string", "app_name", "FingenX"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    lintOptions {
        checkReleaseBuilds false
    }

    signingConfigs { config }

    def keystorePropertiesFile = rootProject.file('keystore.properties')
    def keystoreProperties = new Properties()
    if (keystorePropertiesFile.exists()) {
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    }
    if (keystorePropertiesFile.exists() &&
            keystoreProperties.containsKey('inAppLicenseKey') &&
            keystoreProperties.containsKey('inAppLicenseSalt') &&
            keystoreProperties.containsKey('dropboxApiKey') &&
            keystoreProperties.containsKey('mapsApiKey') &&
            keystoreProperties.containsKey('storeFile') && keystoreProperties['storeFile'] != "" &&
            keystoreProperties.containsKey('storePassword') &&
            keystoreProperties.containsKey('oAuthWebClientID') &&
            keystoreProperties.containsKey('keyAlias') &&
            keystoreProperties.containsKey('keyPassword')) {
        android.defaultConfig.resValue "string", "oAuthWebClientID", keystoreProperties["oAuthWebClientID"]
        android.defaultConfig.resValue "string", "inAppLicenseKey", keystoreProperties["inAppLicenseKey"]
        android.defaultConfig.resValue "string", "inAppLicenseSalt", keystoreProperties["inAppLicenseSalt"]
        android.defaultConfig.resValue "string", "dropboxApiKey", keystoreProperties["dropboxApiKey"]
        android.defaultConfig.manifestPlaceholders = [
                dropboxApiKey: keystoreProperties["dropboxApiKey"],
                mapsApiKey   : keystoreProperties["mapsApiKey"]
        ]
        android.signingConfigs.config.storeFile = file(keystoreProperties['storeFile'])
        android.signingConfigs.config.storePassword = keystoreProperties['storePassword']
        android.signingConfigs.config.keyAlias = keystoreProperties['keyAlias']
        android.signingConfigs.config.keyPassword = keystoreProperties['keyPassword']
    } else {
        android.defaultConfig.resValue "string", "inAppLicenseKey", ""
        android.defaultConfig.resValue "string", "inAppLicenseSalt", ""
        android.defaultConfig.resValue "string", "dropboxApiKey", ""
        android.defaultConfig.manifestPlaceholders = [
                dropboxApiKey: "",
                mapsApiKey   : ""
        ]
        android.buildTypes.release.signingConfig = null
    }
    if (keystorePropertiesFile.exists() &&
            keystoreProperties.containsKey('xVersion') &&
            keystoreProperties.containsKey('urlWebAPI'))
    {
        android.defaultConfig.versionName = android.defaultConfig.versionName.concat("-X." + keystoreProperties["xVersion"])
        android.defaultConfig.resValue "string", "urlWebAPI", keystoreProperties["urlWebAPI"]
        android.defaultConfig.resValue "string", "urlChangelogX", keystoreProperties["urlWebAPI"] + "changelog?version=" + keystoreProperties["xVersion"]
    } else {
        android.defaultConfig.resValue "string", "urlWebAPI", ""
        android.defaultConfig.resValue "string", "urlChangelogX", ""
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        debug {
//            resValue "string", "app_name", "FG debug"
//            applicationIdSuffix ".debug"
        }
    }
    flavorDimensions "main"
    productFlavors {
        prod {
            dimension "main"
        }
//        sync {
//            applicationIdSuffix ".sync"
//            resValue "string", "app_name", "Fingen sync"
//            dimension "main"
//        }
    }
    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

def retrofit = '2.4.0'
def dagger = '2.16'
def butterKnife = "10.0.0"

dependencies {
    repositories {
        mavenCentral()
    }
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation files('libs/opencsv-2.4.jar')
    implementation files('libs/juniversalchardet-1.0.3.jar')
    implementation(name: 'MaterialShowCase-1.0.5', ext: 'aar')
    implementation(name: 'HeaderDecor-0.2.7', ext: 'aar')
    annotationProcessor 'com.github.hotchemi:permissionsdispatcher-processor:3.1.0'
    implementation 'com.airbnb.android:airmapview:1.6.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.preference:preference:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation "com.google.android.gms:play-services-maps:17.0.0"
    implementation "com.google.android.gms:play-services-vision:19.0.0"
    implementation 'com.dlazaro66.qrcodereaderview:qrcodereaderview:2.0.3'
    implementation 'com.dropbox.core:dropbox-core-sdk:3.0.6'
    implementation 'com.evernote:android-job:1.2.5'
    implementation 'com.github.angads25:filepicker:1.1.1'
    implementation 'de.mdxdave:changeloglib:-SNAPSHOT'
    implementation 'com.github.hotchemi:permissionsdispatcher:3.1.0'
    implementation 'com.github.PhilJay:MPAndroidChart:v2.2.5'
    implementation 'com.github.QuadFlask:colorpicker:0.0.14'
    implementation 'com.l4digital.fastscroll:fastscroll:1.0.4'
    implementation 'com.mikepenz:actionitembadge:3.3.2@aar'
    implementation 'com.sothree.slidinguppanel:library:3.4.0'
    implementation 'de.psdev.licensesdialog:licensesdialog:1.8.3'
    implementation 'eu.davidea:flipview:1.1.3'
    implementation 'io.requery:sqlite-android:3.20.0'
    implementation 'net.xpece.android:support-preference:2.1.2'
    implementation 'org.apache.commons:commons-lang3:3.7'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.59'
    implementation 'org.greenrobot:eventbus:3.2.0'
    implementation 'ru.tinkoff.decoro:decoro:1.3.4'
    implementation('com.anjlab.android.iab.v3:library:1.0.44') { exclude module: 'support-v4' }
    implementation('com.github.omadahealth:lollipin:2.1.0@aar') { transitive = true }
    implementation('com.mikepenz:materialdrawer:6.0.7@aar') { transitive = true }
    androidTestImplementation 'junit:junit:4.13'
    androidTestImplementation 'org.hamcrest:hamcrest-library:2.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'

    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit"

    implementation "com.jakewharton:butterknife:$butterKnife"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterKnife"

    implementation "com.google.dagger:dagger:$dagger"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger"

    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.0'

    implementation 'com.aurelhubert:ahbottomnavigation:2.2.0'
}
